import ssl
import socket
from urllib.parse import urlparse
import time
import json

def testConnection(url, jsonPath):
    parsedURL = urlparse(url)
    hostname = parsedURL.hostname

    if parsedURL.scheme == 'http':
        print("Warning: HTTP protocol detected. Sensitive information should not be transmitted over HTTP.")
        return

    with open(jsonPath, 'r') as file:
        cipherData = json.load(file)

    context = ssl.SSLContext(ssl.PROTOCOL_SSLv23)

    try:
        with socket.create_connection((hostname, 443)) as sock:
            with context.wrap_socket(sock, server_hostname=hostname) as sslsock:
                cipherFromContext = context.get_ciphers()

                # Extract 'name' values from cipher data
                cipher_names = [cipher['name'] for cipher in cipherFromContext]
                print(cipher_names)

                # SSL Certificate part
                cert = sslsock.getpeercert()
                if cert:
                    current_time = time.time()
                    not_before = ssl.cert_time_to_seconds(cert['notBefore'])
                    not_after = ssl.cert_time_to_seconds(cert['notAfter'])
                    if not_after < current_time:
                        print("Warning: SSL certificate has expired.")
                    print("SSL Certificate found.")
                    print("Subject: ", cert['subject'])
                    print("Version: ", cert['version'])
                    print("Serial Number: ", cert['serialNumber'])
                    print("Not Before: ", cert['notBefore'])
                    print("Not After: ", cert['notAfter'])
                    print()

                    remaining_time = not_after - current_time
                    days_remaining = remaining_time // (24 * 3600)
                    remaining_time %= (24 * 3600)
                    hours_remaining = remaining_time // 3600

                    print("Remaining Time of SSL Certificate: %d days, %d hours" % (days_remaining, hours_remaining))
                else:
                    print("Warning: No SSL certificate found.")

    except ssl.SSLError as e:
        print(f"SSL Error: {e}")
    except socket.error as e:
        print(f"Socket Error: {e}")
    except Exception as e:
        print(f"Error: {e}")

