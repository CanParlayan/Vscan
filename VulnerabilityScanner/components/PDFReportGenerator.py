import os
import json
from fpdf import FPDF

class PDFReportGenerator:
    def __init__(self, json_report_file):
        with open(json_report_file, "r") as f:
            self.report_data = json.load(f)
        self.filename = os.path.splitext(os.path.basename(json_report_file))[0]

    def format_timestamp(self, timestamp):
        year = timestamp[:4]
        month = timestamp[4:6]
        day = timestamp[6:8]
        hour = timestamp[9:11]
        minute = timestamp[11:13]
        return f'{month}.{day}.{year} - {hour}:{minute}'

    def generate_pdf_report(self):
        pdf = FPDF()
        pdf.add_page()
        pdf.set_auto_page_break(auto=True, margin=15)
        
        # Header
        pdf.set_font('Times', 'B', 16)
        pdf.cell(0, 10, 'Vulnerability Report', 0, 1, 'C')
        pdf.ln(10)

        # Document Title
        pdf.set_font('Times', 'B', 14)
        pdf.cell(0, 10, f'Site URL: {self.report_data["site_url"]}', 0, 1, 'L')
        formatted_time = self.format_timestamp(self.report_data['timestamp'])
        pdf.cell(0, 10, f'Time: {formatted_time}', 0, 1, 'L')
        pdf.ln(10)

        # Audit Details Header
        pdf.set_font('Times', 'B', 14)
        pdf.cell(0, 10, 'Audit Details:', 0, 1, 'L')
        
        # Audit Details Content
        toggle_color = False
        pdf.set_font('Times', '', 12)
        for audit_type, details in self.report_data["Audit Details"].items():
            pdf.set_font('Times', 'IU', 12)  # Italic and Underlined for audit type titles
            pdf.cell(0, 10, f'{audit_type.capitalize()}:', 0, 1, 'L')
            pdf.set_font('Times', '', 11)
            
            if isinstance(details, dict):
                for url, vulns in details.items():
                    # Set alternating background colors
                    pdf.set_fill_color(230, 230, 230) if toggle_color else pdf.set_fill_color(255, 255, 255)
                    pdf.multi_cell(0, 10, f'URL: {url}', fill=True)
                    toggle_color = not toggle_color
                    for vuln in vulns:
                        pdf.set_fill_color(230, 230, 230) if toggle_color else pdf.set_fill_color(255, 255, 255)
                        pdf.multi_cell(0, 10, f'  - {vuln}', fill=True)
                        toggle_color = not toggle_color
            elif isinstance(details, list):
                for item in details:
                    pdf.set_fill_color(230, 230, 230) if toggle_color else pdf.set_fill_color(255, 255, 255)
                    pdf.multi_cell(0, 10, f'  - {item}', fill=True)
                    toggle_color = not toggle_color
            pdf.ln(2)

        # Save PDF
        pdf.output(f'reports/{self.filename}.pdf')
