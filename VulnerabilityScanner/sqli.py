from VulnerabilityScanner.components import sqliapply


def singlescan(url, report, sqlipayloads=None, quiet=False):
    payload_dir = sqlipayloads or "payloads"
    result = sqliapply.scan(url, payload_dir=payload_dir)

    if result is None or not result.get('SQL'):
        if not quiet:
            print("No SQL injection vulnerabilities detected.")
        return

    if not quiet:
        print("SQL Injection Result:", result)

    vulnerability_details = {
        "URL": result.get('URL'),
        "Payload": result.get('Payload'),
        "Type": result.get('Type')
    }

    report.write_sql_vulnerability(
        url=vulnerability_details['URL'],
        payload=vulnerability_details['Payload'],
        vulnerability_type=vulnerability_details['Type']
    )
