import subprocess
import shlex
from urllib.parse import urlparse
from dotenv import load_dotenv
import os

from VulnerabilityScanner.components.terminalColors import TerminalColors


class CommonPortsCheck:

    def __init__(self, quiet):
        self.quiet = quiet
        load_dotenv()

    def scan_ports(self, url, report):
        if not self.quiet:
            print("[*] Scanning common ports using nmap")

        parsed_url = urlparse(url)
        host = parsed_url.hostname

        nmap_path = os.getenv("NMAP_PATH")

        if nmap_path:
            if os.path.exists(nmap_path):
                nmap_command = f"{nmap_path} -p- -sV -sC -A {host}"
           #    nmap_command = f"{nmap_path} -F {host}"
                safe_command = shlex.split(nmap_command)

                try:
                    result = subprocess.run(safe_command, capture_output=True, text=True, check=True)
                    print(result.stdout)
                except subprocess.CalledProcessError as e:
                    print(f"{TerminalColors.FAIL}An error occurred while scanning ports: {e}{TerminalColors.ENDC}")
            else:
                print(f"{TerminalColors.FAIL}nmap is not found at the specified path.{TerminalColors.ENDC}")
        else:
            print(f"{TerminalColors.FAIL}NMAP_PATH environment variable is not set.{TerminalColors.ENDC}")

        if not self.quiet:
            print("[*] Common ports have been scanned!")
